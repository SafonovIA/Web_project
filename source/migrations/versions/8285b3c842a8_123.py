"""123

Revision ID: 8285b3c842a8
Revises: 28089d39a362
Create Date: 2024-07-22 22:18:40.502360

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8285b3c842a8'
down_revision = '28089d39a362'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_account', schema=None) as batch_op:
        batch_op.drop_index('ix_user_account_email')
        batch_op.drop_index('ix_user_account_role')
        batch_op.drop_index('ix_user_account_username')

    op.drop_table('user_account')
    with op.batch_alter_table('accessories', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('active', 'inactive', name='status_enum'),
               type_=sa.Enum('active', 'inactive', name='enum_st', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('outwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('shoes', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('socks', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('sweatwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('trousers', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('tshirts', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('email', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('password', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('role', sa.String(length=10), nullable=True))
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('second_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.alter_column('second_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_column('role')
        batch_op.drop_column('password')
        batch_op.drop_column('email')
        batch_op.drop_column('username')

    with op.batch_alter_table('tshirts', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('trousers', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('sweatwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('socks', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('shoes', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('outwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.Enum('active', 'inactive', name='enum_st', schema='public'),
               type_=postgresql.ENUM('active', 'inactive', name='status_enum'),
               existing_nullable=False)

    with op.batch_alter_table('accessories', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    op.create_table('user_account',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_account_pkey')
    )
    with op.batch_alter_table('user_account', schema=None) as batch_op:
        batch_op.create_index('ix_user_account_username', ['username'], unique=True)
        batch_op.create_index('ix_user_account_role', ['role'], unique=False)
        batch_op.create_index('ix_user_account_email', ['email'], unique=True)

    # ### end Alembic commands ###
