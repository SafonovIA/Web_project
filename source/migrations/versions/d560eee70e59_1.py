"""1

Revision ID: d560eee70e59
Revises: f1c867659e39
Create Date: 2024-07-16 03:16:13.245923

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd560eee70e59'
down_revision = 'f1c867659e39'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('adress', sa.Text(), nullable=False),
    sa.Column('city', sa.Text(), nullable=False),
    sa.Column('postal_code', sa.String(length=6), nullable=False),
    sa.Column('country', sa.String(length=26), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('users_adress')
    with op.batch_alter_table('accessories', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('outwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('shoes', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('socks', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('sweatwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('trousers', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    with op.batch_alter_table('tshirts', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               type_=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tshirts', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('trousers', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('sweatwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('socks', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('shoes', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('outwears', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    with op.batch_alter_table('accessories', schema=None) as batch_op:
        batch_op.alter_column('gender',
               existing_type=sa.Enum('мужской', 'женский', 'детский', name='gender_enum', schema='public'),
               type_=postgresql.ENUM('мужской', 'женский', 'детский', name='gender_enum'),
               existing_nullable=False)

    op.create_table('users_adress',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('adress', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('city', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('postal_code', sa.VARCHAR(length=6), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=26), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='users_adress_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_adress_pkey')
    )
    op.drop_table('users_address')
    # ### end Alembic commands ###
